name: pull request

on: pull_request

env:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

jobs:
  check-version:
    name: check SNAPSHOT version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Export project version
        uses: ./.github/actions/export-project-version
      - name: Check version is SNAPSHOT
        run: |
          echo $PROJECT_VERSION | egrep '^([0-9]+\.){1,2}([0-9]+(-SNAPSHOT))?$'

  install:
    name: install
    runs-on: ubuntu-latest
    needs: [check-version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@9dc354d4a8f5781ba8880dc9e6a7bdcc7845e3e7
        with:
          java-version: '8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install dependencies
        id: install
        run: mvn $MVN_CLI_OPTS install
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: '*Install dependencies*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}

  build:
    name: "Build apps and images"
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Export project version
        uses: ./.github/actions/export-project-version
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@9dc354d4a8f5781ba8880dc9e6a7bdcc7845e3e7
        with:
          java-version: '8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build the docker images
        run: |
          mvn $MAVEN_CLI_OPTS install -DskipTests -Pspring -PgenerateApps
          mvn $MAVEN_CLI_OPTS -f apps/pom.xml package docker:build -DskipTests -Pspring
