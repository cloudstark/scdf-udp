name: master

on:
  push:
    branches:
      - 'master'
#    paths:
#      - '**/src/**'
#      - '**/pom.xml'

env:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

jobs:
  check-version:
    name: check SNAPSHOT version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Export project version
        uses: ./.github/actions/export-project-version
      - name: Check version is SNAPSHOT
        run: |
          echo $PROJECT_VERSION | egrep '^([0-9]+\.){1,2}([0-9]+(-SNAPSHOT))?$'

  install:
    name: install
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@v1.0.0
        with:
          java-version: 'openjdk8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ github.ref }}
      - name: Install dependencies
        id: install
        run: mvn $MVN_CLI_OPTS clean install
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: '*Install dependencies*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}

  test:
    name: test
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@v1.0.0
        with:
          java-version: 'openjdk8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ github.ref }}
      - name: Run tests
        run: mvn $MVN_CLI_OPTS test
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: '*Run tests*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}

#  quality:
#    name: SonarCloud Trigger
#    runs-on: ubuntu-latest
#    needs: test
#    env:
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      SONAR_URL: https://sonarcloud.io
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup Java 1.8
#        uses: joschi/setup-jdk@v1.0.0
#        with:
#          java-version: 'openjdk8'
#      - name: Setup cache
#        uses: actions/cache@v1
#        with:
#          path: .m2/repository/
#          key: ${{ github.ref }}
#      - name: SonarCloud Scan
#        run: |
#          mvn $MVN_CLI_OPTS verify sonar:sonar \
#            -Dsonar.host.url=$SONAR_URL \
#            -Dsonar.login=$SONAR_TOKEN \
#            -Ddependency-check.skip=true

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@v1.0.0
        with:
          java-version: 'openjdk8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ github.ref }}
      - name: Build the project
        run: mvn $MAVEN_CLI_OPTS package -DskipTests
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: '*Build the project*'
          mention: 'here'
          mention_if: 'failure'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build]
    env:
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_PWD: ${{ secrets.BINTRAY_PWD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Export project version
        uses: ./.github/actions/export-project-version
      - name: Setup Java 1.8
        uses: joschi/setup-jdk@v1.0.0
        with:
          java-version: 'openjdk8'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: .m2/repository/
          key: ${{ github.ref }}
      - name: Publish on Bintray/JCenter
        run: mvn $MAVEN_CLI_OPTS deploy -DskipTests -Ddependency-check.skip=true
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Publish ${{ env.PROJECT_VERSION }} on Bintray/JCenter*'
          mention: 'here'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
